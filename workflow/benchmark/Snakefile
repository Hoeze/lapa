rule benchmark_lapa:
    input:
        quantseq = config['lapa']['lapa_dir'].format(
            sample='WTC11', library_prep='quantseq',
            platform='Illumina', counting='end'),
        drna_ont_end = config['lapa']['lapa_dir'].format(
            sample='WTC11', library_prep='dRNA',
            platform='ONT', counting='end'),
        drna_ont_tail = config['lapa']['lapa_dir'].format(
            sample='WTC11', library_prep='dRNA',
            platform='ONT', counting='tail')
        # short_rna = config['lapa']['lapa_dir'].format(
        #     sample='wtc11', dataset='short_rna_lapa'),
        # cdna_ont = config['lapa']['lapa_dir'].format(
        #     sample='WTC11', library_prep='cDNA',
        #     platform='PacBio', counting='end'),
        # cdna_pacbio = config['lapa']['lapa_dir'].format(
        #     sample='WTC11', method='cDNA-PacBio', count_read='tail'),
    output:
        pr_curve_plot = 'reports/figures/wtc11_pr_curve.png',
    notebook:
        './benchmark_lapa.ipynb'


# rule overlap_gm12_pc_talon:
#     input:
#         clusters = config['lapa']['quantseq_dir'].format(sample='gm12878'),
#         gtf = config['long_read']['gm12878']['gtf_talon'],
#         abundance = config['long_read']['gm12878']['abundance']
#     params:
#         max_distance = 50,
#         tpm_columns = ['PB_GM12878_R1', 'PB_GM12878_R2']
#     output:
#         overlap = 'data/processed/annotation_overlap/gm12_overlap.tsv'
#     script:
#         "./overlap_talon_quanseq.py"
