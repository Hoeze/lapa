rule download_gm12_reads:
    resources:
        mem_gb = 4
    output:
        bam = config['long_read']['gm12878']['bam']
    shell:
        "wget https://www.encodeproject.org/files/{wildcards.encode_id}/@@download/{wildcards.encode_id}.bam -O {output}"


rule count_gm12_pacbio:
    input:
        bam = config['long_read']['gm12878']['bam']
    output:
        txt = 'data/results/gm12878/count/{encode_id}.txt'
    threads: 1
    resources:
        mem_gb = 16
    shell:
        "samtools view -F 4 -c {input.bam} > {output.txt}"


rule lapa_longreads_gm12:
    input:
        bam = expand(config['long_read']['bam'],
                     encode_id=config['long_read']['gm12878']['encode_id'],
                     sample='gm12878'),
        fasta = fasta,
        gtf = gtf,
        chrom_sizes = chrom_sizes
    threads: 1
    resources:
        mem_gb = 16
    output:
        config['lapa']['long_rna_dir']
    run:
        alignment = ','.join(input.bam)        
        shell(f'lapa \
        --alignment "{alignment}" \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --method end \
        --output_dir {output}')


rule lapa_gm12878_short_reads:
    input:
        bam = expand(config['short_rnaseq']['bam'],
                     encode_id=config['short_rnaseq']['data']['gm12878'],
                     sample='gm12878'),
        fasta = fasta,
        gtf = gtf,
        chrom_sizes = chrom_sizes
    threads: 1
    resources:
        mem_gb = 16
    output:
        directory(config['lapa']['short_rna_dir'])
    run:
        alignment = ','.join(input.bam)        
        shell(f'lapa \
        --alignment "{alignment}" \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --method tail \
        --output_dir {output}')


rule sample_gm12878_quantseq:
    input:
        bam = expand(config['quantseq']['bam'], rep=['rep1', 'rep2'])        
    output:
        csv = config['lapa']['samples'].format(
            sample='gm12878', method='quantseq')
    run:
        bam = config['quantseq']['bam']
        with open(output['csv'], 'w') as f:
            f.write('sample,path\n')
            for i in ['rep1', 'rep2']:
                f.write(f'gm12878_{i},{bam.format(rep=i)}\n')


rule lapa_gm12878_quantseq:
    input:
        sample_csv = config['lapa']['samples'].format(
            sample='gm12878', method='quantseq'),
        fasta = fasta,
        gtf = gtf,
        chrom_sizes = chrom_sizes
    threads: 1
    resources:
        mem_gb = 16
    output:
        directory(config['lapa']['quantseq_dir'])
    shell:
        "lapa \
        --alignment {input.sample_csv} \
        --fasta {input.fasta} \
        --annotation {input.gtf} \
        --chrom_sizes {input.chrom_sizes} \
        --method tail \
        --output_dir {output}"
