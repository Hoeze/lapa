import pandas as pd


def counts_fastq(wildcards):
    platform = wildcards['platform']
    library_prep = wildcards['library_prep']

    if platform in {'PacBio', 'ONT'}:
        return expand(config['encode']['fastq_read_count'],
                      encode_id=file_acc_long_reads(wildcards))

    elif platform == 'Illumina' and library_prep == 'se':
        sample = wildcards['sample']
        encode_id = file_acc_short_reads(wildcards)
        return expand(config['encode']['fastq_read_count'],
                      encode_id=encode_id, sample=sample)

    elif platform == 'Illumina' and library_prep == 'quantseq':
        return expand(config['quantseq']['fastq_read_count'],
                      rep=['1', '2', '3'], sample=sample)

    else:
        raise ValueError('No samples match given wildcards %s'
                         % str(wildcards))


def _read_counts(wildcards):
    df = pd.read_csv(config['lrgasp']['config'], sep='\t')
    _df = df[
        (df['file_contents'] == 'reads') &
        (df['sample'] == wildcards['sample']) &
        (df['platform'].isin({'PacBio', 'ONT'})) &
        (df['library_prep'] != 'R2C2')
    ]
    _df_r2c2 = df[
        (df['file_contents'] == 'reads') &
        (df['sample'] == wildcards['sample']) &
        (df['platform'].isin({'PacBio', 'ONT'})) &
        (df['library_prep'] == 'R2C2')
    ]
    return _df, _df_r2c2


def read_counts_fastq(wildcards):
    _df, _df_r2c2 = _read_counts(wildcards)
    return [
        *expand(config['encode']['fastq_read_count'],
                encode_id=_df['file_acc'].tolist()),
        *expand(config['encode']['fasta_read_count'],
                encode_id=_df_r2c2['file_acc'].tolist())
    ]


rule read_nums_datasets:
    input:
        short_counts = config['short_rnaseq']['short_count'].format(
            sample='gm12878'),
        quantseq = config['quantseq']['quantseq_count'],
        read3 = config['read3']['read3_count'],
        c2c12_read_annot = config['c2c12']['read_annot_bulk'],
        gm12878_read_annot = config['long_read']['gm12878']['read_annot']
    output:
        read_nums = "reports/figures/read_nums_datasets.png"
    threads: 1
    resources:
        mem_gb = 32
    notebook:
        "read_nums_datasets.ipynb"


# rule hist_read_counts:
#     input:
#         tes = (lambda wildcards: config['annotation']['tes'].format(
#             specie=get_specie(wildcards))),
#         lapa_dir = config['lapa']['lapa_dir']
#     output:
#         hist = 'data/results/temp/hist/{sample}/{dataset}.csv',
#         percentage = 'data/results/temp/hist/{sample}/{dataset}.txt'
#     threads: 1
#     resources:
#         mem_gb = 4
#     script:
#         'hist_read_counts.py'


# rule plot_hist_read_count:
#     input:
#         short_rna_hist = 'data/results/temp/hist/{sample}/{dataset}.csv'.format(
#             sample='gm12878', dataset='short_rna_lapa'),
#         quantseq_hist = 'data/results/temp/hist/{sample}/{dataset}.csv'.format(
#             sample='gm12878', dataset='quantseq_lapa'),
#         long_rna_gm12_hist = 'data/results/temp/hist/{sample}/{dataset}.csv'.format(
#             sample='gm12878', dataset='long_rna_lapa'),
#         read3 = 'data/results/temp/hist/{sample}/{dataset}.csv'.format(
#             sample='c2c12', dataset='read3_lapa'),
#         long_rna_c2c12_hist = 'data/results/temp/hist/{sample}/{dataset}.csv'.format(
#             sample='c2c12', dataset='long_rna_lapa'),

#         short_rna_percent = 'data/results/temp/hist/{sample}/{dataset}.txt'.format(
#             sample='gm12878', dataset='short_rna_lapa'),
#         quantseq_percent = 'data/results/temp/hist/{sample}/{dataset}.txt'.format(
#             sample='gm12878', dataset='quantseq_lapa'),
#         long_rna_gm12_percent = 'data/results/temp/hist/{sample}/{dataset}.txt'.format(
#             sample='gm12878', dataset='long_rna_lapa'),
#         read3_percent = 'data/results/temp/hist/{sample}/{dataset}.txt'.format(
#             sample='c2c12', dataset='read3_lapa'),
#         long_rna_c2c12_percent = 'data/results/temp/hist/{sample}/{dataset}.txt'.format(
#             sample='c2c12', dataset='long_rna_lapa')
#     output:
#         hist = 'reports/figures/hist_read_counts.png',
#         percent = 'reports/figures/percentage_of_reads_tes.png'
#     threads: 1
#     resources:
#         mem_gb = 4
#     notebook:
#         'hist_read_count.ipynb'
