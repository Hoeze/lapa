rule chrom_sizes:
    input:
        fasta = fasta
    threads: 1
    resources:
        mem_gb = 4
    output:
        chrom_sizes = config['common']['chrom_sizes']
    shell:
        "faidx {input.fasta} -i chromsizes > {output.chrom_sizes}"


rule site_motif:
    output:
        motif_logo = "reports/figures/polyA_motif.pdf"
    script:
        "polyA_motif.py"


rule download_encode_bam:
    resources:
        mem_gb = 4
    output:
        bam = config['encode']['bam']
    shell:
        "wget https://www.encodeproject.org/files/{wildcards.encode_id}/@@download/{wildcards.encode_id}.bam -O {output}"


rule bam_read_count:
    input:
        bam = config['encode']['bam']
    output:
        txt = config['encode']['bam_read_count']
    threads: 1
    resources:
        mem_gb = 4
    shell:
        "samtools view -F 4 -c {input.bam} > {output.txt}"


rule utr_fix:
    input:
        gtf = 'data/resources/common/{gtf}.gtf'
    output:
        gtf = 'data/resources/common/{gtf}.utr_fix.gtf'
    shell:
        "gencode_utr_fix --input_gtf {input.gtf} --output_gtf {output.gtf}"

# rule gtf_tes:
#     input:
#         gtf = gtf
#     output:
#         tes = config['annotation']['tes']
#     script:
#         "gtf_tes.py"


# rule gene_name_id_mapping:
#     input:
#         gtf = gtf
#     output:
#         mapping = config['gene_id_name_mapping']
#     script:
#         "gene_id_name_mapping.py"
